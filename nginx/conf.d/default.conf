# =================================
# NGINX SERVER CONFIGURATION
# Doorlock IoT System Routing
# =================================

# HTTP server (redirect to HTTPS in production)
server {
    listen 80;
    server_name _;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # For development: serve HTTP directly
    # For production: uncomment redirect below
    # return 301 https://$host$request_uri;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # API endpoints for ESP8266 devices
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        # Proxy to FastAPI backend
        proxy_pass http://fastapi_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for IoT devices
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings for bulk uploads
        proxy_buffering on;
        proxy_buffer_size 16k;
        proxy_buffers 8 16k;
        proxy_busy_buffers_size 32k;
        
        # Logging for API calls
        access_log /var/log/nginx/api_access.log detailed;
    }
    
    # Dashboard web interface
    location /dashboard/ {
        # Rate limiting for dashboard
        limit_req zone=dashboard burst=50 nodelay;
        
        # Proxy to React/HTML dashboard
        proxy_pass http://dashboard_frontend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for web interface
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
    }
    
    # Firmware file serving (direct from nginx)
    location /firmware/ {
        # Rate limiting for firmware downloads
        limit_req zone=firmware burst=10 nodelay;
        
        # Serve files directly from filesystem
        alias /var/www/firmware/;
        
        # Security: only allow .bin files
        location ~* \.(bin)$ {
            # Cache firmware files
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Security headers for firmware
            add_header Content-Type application/octet-stream;
            add_header Content-Disposition 'attachment';
            
            # Log firmware downloads
            access_log /var/log/nginx/firmware_access.log detailed;
        }
        
        # Block access to non-bin files
        location ~* \.(php|asp|aspx|jsp|pl|py|sh|cgi)$ {
            deny all;
        }
        
        # Block hidden files
        location ~ /\. {
            deny all;
        }
    }
    
    # Root location (redirect to dashboard)
    location / {
        return 301 /dashboard/;
    }
    
    # WebSocket support (for future real-time features)
    location /ws/ {
        proxy_pass http://fastapi_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 86400;  # 24 hours
        proxy_send_timeout 86400;
    }
    
    # Status and monitoring endpoints
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.20.0.0/16;  # Docker network
        deny all;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# HTTPS server (for production)
server {
    listen 443 ssl http2;
    server_name _;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Include all the same location blocks as HTTP server
    include /etc/nginx/conf.d/common-locations.conf;
}
